.\" Manpage for bender.config.
.\" Contact qeftser@gmail.com in to correct errors or typos.
.TH man 1 "02 Apr 2025" "1.0" "bender.config man page"
.SH NAME
bender.config \- description of semantics for the bender daemon configuartion file
.SH SYNOPSIS
[type] external command = internal command
.SH DESCRIPTION
The bender configuration file is parsed by the bender tool and daemon to determine which
commands to respond to and how to behave based on the command. The ros2 setup file for
the version provided in /etc/bender/daemon.conf and the setup script for the bender install
provided in /etc/bender/daemon.conf are implicitly sourced before each command is run. 
Commands can be of the following types: ros, script, echo, exec, internal, response. 
The type is followed by a string specifying the command the user will type, and then a 
string specifying the command to be executed by the daemon on reception of the external 
command. The basic syntax is as follows:
.TP
[type] external command = internal command
.P
The type element will be one of the types listed above. The external command will be the one 
the user will type, which will trigger the internal command, which will behave accordinly to
the type. The type must come first and be enclosed by brackets, []. The external command comes
immidiately after and lasts until an '=' character is parsed. The internal command follows the
'=' character and lasts until the end of the line, e.g. the character '\n'. Each section (type,
external,external) will be trimmed on processing to contain no whitespace before or after, and 
only a single space, ' ', between each consecutive sequence of non-whitespace characters. The 
characters ';' and '#' can be used at the start, as the first non-whitespace, or at the end of
a line to denote a comment.
.P
In order to prevent the addition of many nearly identical commands, the '%' character will be
given a special meaning. In the internal command, it will specify the beginning of the 'arguments'
section and allow anything after that point to be counted as a match, and the rest of the string
passed to be seen as an argument. In the internal command, '%' is treated the same as '\n', and
will denote the end of a line. Any string remaining after matching with the external command will
be deposited at the end of the external command with a single ' ' character in front of it during
the execution. See the examples section to see how this feature can be used.
.SH TYPES
.TP
\fBros       \fR
Specifies a ros command. The internal command will be run with /opt/ros/$ROS_DISTRO/bin/ros2 appended
to the front of it, where $ROS_DISTRO is the value passed in the configuration file /etc/bender/daemon.conf
.TP
\fBscript    \fR
Appends the path $BENDER_DIR/scripts to the command to run, with no spaces. This is meant to allow commands
that run the scripts provided by the bender installation. $BENDER_DIR is passed to the daemon and specified
in /etc/bender/daemon.conf.
.TP
\fBecho      \fR
Places the internal command inside a call to echo. This effectivly just prints things back to the tool
from each daemon. Useful for checking which daemons are active on the network and for checking the 
values of environment variables.
.TP
\fBexec       \fR
Execute a command on the listening daemon's machine. Corresponds to executing a shell command in
bash on all other systems. The most general option but the most difficult to use.
.TP
\fBinternal   \fR
Commands that influence the internal state of the bender tool or the daemon. Currently there
are none of these implimented, and messages of this form will have the same result as echo
.TP
\fBresponse   \fR
Type exclusive to the messages sent by the daemon to the tool. Will result in behavior of
echo if sent to the daemon.
.SH EXAMPLES
.TP
A comment
# ignored
.TP
Another comment
; also ignored
.TP
User will "run bender -c d" to see the current working directory of every avaliable daemon
[exec] d = pwd
.TP
Same as above
[exec]d=   pwd   
.TP
List all ros2 nodes currently running on all systems. Ends up as the command: ros2 topic list
[ros] list = topic list
.TP
Update the submodules in every bender install (provided the script exists)
[script] um = update_submodules.sh
.TP
Check the name of each system
[echo] name = $BENDER_HOSTNAME
.TP
Ping each system
[echo] ping = pong
.TP
Reimpliment the cat command on the remote systems
[exec] cat % = cat %
.TP
Equivilant to the above command - discouraged
[exec] cat % = cat
.TP
Equivilant to the above command - Should do something else but doesn't
[exec] cat % sjafklsjdlkfs = cat %
.TP
Impliment the echo command to grab a single message from a topic on each system
[ros] echo % = echo --once --timeout 5 %
.TP
See also the following file for examples and preimplimented commands
/etc/bender/cmd.conf
.SH SEE ALSO
magma(1), bender(1) 
.SH BUGS
No known bugs - just a lot of janky syntax
.SH AUTHOR
qeftser (qeftser@gmail.com)
